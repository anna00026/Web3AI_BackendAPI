<?php

namespace Tests\Helpers\Web3Api;


use App\Helpers\Web3Api\Web3Api;
use App\Helpers\Web3Api\Web3NetworkEnum;
use Tests\TestCase;

class Web3ApiTest extends TestCase
{
    private Web3Api $api;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->api = new Web3Api();
    }

    public function testInfo()
    {
        dump($this->api->info(Web3NetworkEnum::Ethereum->value));
        dump($this->api->info(Web3NetworkEnum::Polygon->value));
        dump($this->api->info(Web3NetworkEnum::Tron->value));
    }

    public function testGetBalance()
    {
        dump($this->api->getBalance(Web3NetworkEnum::Ethereum->value, '0x05C2a07DA158282AA4e7c70AcA16b639f3Cb9D3B'));
        dump($this->api->getBalance(Web3NetworkEnum::Polygon->value, '0x69cadAD4155bc7acb31DaAA0ddB04363E129C390'));
        dump($this->api->getBalance(Web3NetworkEnum::Tron->value, 'TMy5GTC2vAKwDTNMZoVRfwLNt8NZGWMD2Q'));
    }

    public function testSend()
    {
//        dump($this->api->send(Web3NetworkEnum::Ethereum->value, '0x5AC51fd1a0a3339328c35Bd8bDB43aB91A125E1a', 0.002));
//        dump($this->api->send(Web3NetworkEnum::Polygon->value, '0x5AC51fd1a0a3339328c35Bd8bDB43aB91A125E1a', 0.1));
//        dump($this->api->send(Web3NetworkEnum::Tron->value, 'TMy5GTC2vAKwDTNMZoVRfwLNt8NZGWMD2Q', 1.23));
    }

    public function testContractInfo()
    {
        dump($this->api->contractInfo(Web3NetworkEnum::Ethereum->value, 'ETH'));
        dump($this->api->contractInfo(Web3NetworkEnum::Ethereum->value, 'USDT'));
        dump($this->api->contractInfo(Web3NetworkEnum::Ethereum->value, 'USDC'));

        dump($this->api->contractInfo(Web3NetworkEnum::Polygon->value, 'MATIC'));
        dump($this->api->contractInfo(Web3NetworkEnum::Polygon->value, 'USDT'));
        dump($this->api->contractInfo(Web3NetworkEnum::Polygon->value, 'USDC'));

        dump($this->api->contractInfo(Web3NetworkEnum::Tron->value, 'TRX'));
        dump($this->api->contractInfo(Web3NetworkEnum::Tron->value, 'USDT'));
        dump($this->api->contractInfo(Web3NetworkEnum::Tron->value, 'USDC'));
    }

    public function testContractBalanceOf()
    {
        dump($this->api->contractBalanceOf(Web3NetworkEnum::Ethereum->value, 'USDT', '0x05C2a07DA158282AA4e7c70AcA16b639f3Cb9D3B'));
        dump($this->api->contractBalanceOf(Web3NetworkEnum::Ethereum->value, 'USDC', '0x05C2a07DA158282AA4e7c70AcA16b639f3Cb9D3B'));

        dump($this->api->contractBalanceOf(Web3NetworkEnum::Polygon->value, 'USDT', '0x69cadAD4155bc7acb31DaAA0ddB04363E129C390'));
        dump($this->api->contractBalanceOf(Web3NetworkEnum::Polygon->value, 'USDC', '0x69cadAD4155bc7acb31DaAA0ddB04363E129C390'));

        dump($this->api->contractBalanceOf(Web3NetworkEnum::Tron->value, 'USDT', 'TMy5GTC2vAKwDTNMZoVRfwLNt8NZGWMD2Q'));
        dump($this->api->contractBalanceOf(Web3NetworkEnum::Tron->value, 'USDC', 'TMy5GTC2vAKwDTNMZoVRfwLNt8NZGWMD2Q'));
    }

    public function testContractTransfer()
    {
//        dump($this->api->contractTransfer(Web3NetworkEnum::Ethereum->value, 'USDT', '0x5AC51fd1a0a3339328c35Bd8bDB43aB91A125E1a', 0.2));
//        dump($this->api->contractTransfer(Web3NetworkEnum::Polygon->value, 'USDT', '0x5AC51fd1a0a3339328c35Bd8bDB43aB91A125E1a', 0.2));
        dump($this->api->contractTransfer(Web3NetworkEnum::Tron->value, 'USDC', 'TMy5GTC2vAKwDTNMZoVRfwLNt8NZGWMD2Q', 0.12));

    }

    public function testContractEstimateGas()
    {
//        dump($this->api->contractEstimateGas(Web3NetworkEnum::Ethereum->value, 'ETH', '0x5AC51fd1a0a3339328c35Bd8bDB43aB91A125E1a', 0.001));
//        dump($this->api->contractEstimateGas(Web3NetworkEnum::Ethereum->value, 'USDT', '0x5AC51fd1a0a3339328c35Bd8bDB43aB91A125E1a', 0.2));

//        dump($this->api->contractEstimateGas(Web3NetworkEnum::Polygon->value, 'MATIC', '0x5AC51fd1a0a3339328c35Bd8bDB43aB91A125E1a', 0.2));
        dump($this->api->contractEstimateGas(Web3NetworkEnum::Polygon->value, 'USDT', '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174', 0.2));
    }

    public function testIsAddress()
    {
        dump($this->api->isAddress(Web3NetworkEnum::Ethereum->value, '0x5AC51fd1a0a3339328c35Bd8bDB43aB91A125E1a'));
        dump($this->api->isAddress(Web3NetworkEnum::Polygon->value, '0x5AC51fd1a0a3339328c35Bd8bDB43aB91A125E1a'));
        dump($this->api->isAddress(Web3NetworkEnum::Tron->value, 'TMy5GTC2vAKwDTNMZoVRfwLNt8NZGWMD2Q'));

        dump($this->api->isAddress(Web3NetworkEnum::Ethereum->value, '0x5AC51fd1a0a3339328c35Bd8bDB43aB91A125E1b'));
        dump($this->api->isAddress(Web3NetworkEnum::Polygon->value, '0x5AC51fd1a0a3339328c35Bd8bDB43aB91A125E1b'));
        dump($this->api->isAddress(Web3NetworkEnum::Tron->value, 'TMy5GTC2vAKwDTNMZoVRfwLNt8NZGWMD1Q'));
    }

    public function testScanTransactions()
    {
//        dump($this->api->scanTransactions(Web3NetworkEnum::Ethereum->value, '0x5ac51fd1a0a3339328c35bd8bdb43ab91a125e1a'));
//        dump($this->api->scanTransactions(Web3NetworkEnum::Polygon->value, '0x5ac51fd1a0a3339328c35bd8bdb43ab91a125e1a'));
        dump($this->api->scanTransactions(Web3NetworkEnum::Tron->value, 'TMy5GTC2vAKwDTNMZoVRfwLNt8NZGWMD2Q'));
    }

    public function testScanTokenTransfers()
    {
//        dump($this->api->scanTokenTransfers(Web3NetworkEnum::Ethereum->value, '0x5ac51fd1a0a3339328c35bd8bdb43ab91a125e1a'));
//        dump($this->api->scanTokenTransfers(Web3NetworkEnum::Polygon->value, '0x5ac51fd1a0a3339328c35bd8bdb43ab91a125e1a'));
        dump($this->api->scanTokenTransfers(Web3NetworkEnum::Tron->value, 'TQRLSgFvFSuRdxPA5qw47M2y1cbCX6hxpL'));
    }

    public function testCgSimplePrice()
    {
        dump($this->api->cgSimplePrice());
    }

    public function testCgCoinsMarkets()
    {
        dump($this->api->cgCoinsMarkets());
    }

    public function testCgCoins()
    {
        dump($this->api->cgCoins('matic-network'));
    }

    public function testCgCoinsMarketChart()
    {
        dump($this->api->cgCoinsMarketChart());
    }

    public function testGetTransaction()
    {
        dump($this->api->getTransaction(Web3NetworkEnum::Ethereum->value, '0x4d7302c9f8df151e4b376f85c52b4b9cfebc998054fa68f7052f5cc2182505af')); // ERC20 send ETH
        dump($this->api->getTransaction(Web3NetworkEnum::Ethereum->value, '0xf7908e223db59299f46a6ece8942a842fb18a610f72f1866cfe5ac498ba92dd8')); // ERC20 send USDT

        dump($this->api->getTransaction(Web3NetworkEnum::Polygon->value, '0xa879abae297f12b5b9e308c0f579f1b72a4c756b3fbdb7a9d7165e9b3f525e00')); // POLYGON send MATIC
        dump($this->api->getTransaction(Web3NetworkEnum::Polygon->value, '0x6621948576b389c97d517f77d59df62f45de12f2aeedbf8e5a84db20799d696e')); // POLYGON send USDT

        dump($this->api->getTransaction(Web3NetworkEnum::Tron->value, 'ab104775d5ccdf27b6c7be420347df7cd929f68ce58519ee8d0bbb4bb9bca58b')); // TRC20 send TRX
        dump($this->api->getTransaction(Web3NetworkEnum::Tron->value, 'b7970a03540cf30cd990a33152a35e5b2249f173696b9183ec6dd28146763cda')); // TRC20 send USDT
    }
}
